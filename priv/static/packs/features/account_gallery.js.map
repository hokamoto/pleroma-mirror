{"version":3,"sources":["webpack:///app/javascript/seagate/sources/git/hacktivis.me/git/mastofe/app/javascript/mastodon/features/account_gallery/components/media_item.js","webpack:///app/javascript/seagate/sources/git/hacktivis.me/git/mastofe/app/javascript/mastodon/features/account_gallery/index.js"],"names":["MediaItem","visible","displayMedia","_this","props","media","getIn","state","setState","render","label","icon","this","status","get","x","y","style","Object","jsx","className","backgroundImage","backgroundPosition","permalink","to","href","onInterceptClick","handleClick","ImmutablePureComponent","ImmutablePropTypes","map","isRequired","LoadMoreMedia","onLoadMore","maxId","load_more","disabled","onClick","handleLoadMore","shouldUpdateScroll","PropTypes","func","string","AccountGallery","connect","medias","getAccountGallery","params","accountId","isLoading","hasMore","_this2","size","last","undefined","e","_e$target","target","scrollTop","scrollHeight","clientHeight","handleScrollToBottom","dispatch","expandAccountMediaTimeline","preventDefault","componentDidMount","fetchAccount","componentWillReceiveProps","nextProps","_this3","_this$props","loadOlder","column","loading_indicator","handleLoadOlder","column_back_button","react_router_scroll_4_es","scrollKey","onScroll","handleScroll","header_container","role","index","account_gallery_LoadMoreMedia","media_item_MediaItem","object","list","bool"],"mappings":"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","file":"features/account_gallery.js","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Permalink from '../../../components/permalink';\nimport { displayMedia } from '../../../initial_state';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.media.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n  };\n\n  handleClick = () => {\n    if (!this.state.visible) {\n      this.setState({ visible: true });\n      return true;\n    }\n\n    return false;\n  }\n\n  render () {\n    const { media } = this.props;\n    const { visible } = this.state;\n    const status = media.get('status');\n    const focusX = media.getIn(['meta', 'focus', 'x']);\n    const focusY = media.getIn(['meta', 'focus', 'y']);\n    const x = ((focusX /  2) + .5) * 100;\n    const y = ((focusY / -2) + .5) * 100;\n    const style = {};\n\n    let label, icon;\n\n    if (media.get('type') === 'gifv') {\n      label = <span className='media-gallery__gifv__label'>GIF</span>;\n    }\n\n    if (visible) {\n      style.backgroundImage    = `url(${media.get('preview_url')})`;\n      style.backgroundPosition = `${x}% ${y}%`;\n    } else {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <i className='fa fa-eye-slash' />\n        </span>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item'>\n        <Permalink to={`/statuses/${status.get('id')}`} href={status.get('url')} style={style} onInterceptClick={this.handleClick}>\n          {icon}\n          {label}\n        </Permalink>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { fetchAccount } from '../../actions/accounts';\nimport { expandAccountMediaTimeline } from '../../actions/timelines';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButton from '../../components/column_back_button';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { getAccountGallery } from '../../selectors';\nimport MediaItem from './components/media_item';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport { ScrollContainer } from 'react-router-scroll-4';\nimport LoadMore from '../../components/load_more';\n\nconst mapStateToProps = (state, props) => ({\n  medias: getAccountGallery(state, props.params.accountId),\n  isLoading: state.getIn(['timelines', `account:${props.params.accountId}:media`, 'isLoading']),\n  hasMore:   state.getIn(['timelines', `account:${props.params.accountId}:media`, 'hasMore']),\n});\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    shouldUpdateScroll: PropTypes.func,\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  }\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nexport default @connect(mapStateToProps)\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    medias: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n  };\n\n  componentDidMount () {\n    this.props.dispatch(fetchAccount(this.props.params.accountId));\n    this.props.dispatch(expandAccountMediaTimeline(this.props.params.accountId));\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.params.accountId !== this.props.params.accountId && nextProps.params.accountId) {\n      this.props.dispatch(fetchAccount(nextProps.params.accountId));\n      this.props.dispatch(expandAccountMediaTimeline(this.props.params.accountId));\n    }\n  }\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.medias.size > 0 ? this.props.medias.last().getIn(['status', 'id']) : undefined);\n    }\n  }\n\n  handleScroll = (e) => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  }\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.params.accountId, { maxId }));\n  };\n\n  handleLoadOlder = (e) => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  }\n\n  render () {\n    const { medias, shouldUpdateScroll, isLoading, hasMore } = this.props;\n\n    let loadOlder = null;\n\n    if (!medias && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (hasMore && !(isLoading && medias.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    return (\n      <Column>\n        <ColumnBackButton />\n\n        <ScrollContainer scrollKey='account_gallery' shouldUpdateScroll={shouldUpdateScroll}>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.params.accountId} />\n\n            <div role='feed' className='account-gallery__container'>\n              {medias.map((media, index) => media === null ? (\n                <LoadMoreMedia\n                  key={'more:' + medias.getIn(index + 1, 'id')}\n                  maxId={index > 0 ? medias.getIn(index - 1, 'id') : null}\n                  onLoadMore={this.handleLoadMore}\n                />\n              ) : (\n                <MediaItem\n                  key={media.get('id')}\n                  media={media}\n                />\n              ))}\n              {loadOlder}\n            </div>\n\n            {isLoading && medias.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
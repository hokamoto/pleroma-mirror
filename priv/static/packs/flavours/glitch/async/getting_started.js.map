{"version":3,"sources":["webpack:///app/javascript/seagate/sources/git/hacktivis.me/git/mastofe/app/javascript/flavours/glitch/features/getting_started/index.js"],"names":["messages","defineMessages","_defineMessages","heading","id","defaultMessage","home_timeline","notifications","public_timeline","navigation_subheading","settings_subheading","community_timeline","direct","bookmarks","preferences","settings","follow_requests","sign_out","lists","keyboard_shortcuts","lists_subheading","misc","menu","badgeDisplay","number","limit","GettingStarted","connect","getOrderedLists","createSelector","state","get","toList","filter","item","sort","a","b","localeCompare","myAccount","getIn","me","columns","unreadFollowRequests","ImmutableList","size","unreadNotifications","dispatch","fetchFollowRequests","fetchLists","openSettings","openModal","injectIntl","componentWillMount","this","props","componentDidMount","_this$props","render","_this$props2","intl","multiColumn","navItems","listItems","find","push","Object","_babel_runtime_helpers_esm_jsx__WEBPACK_IMPORTED_MODULE_0__","flavours_glitch_features_ui_components_column_link__WEBPACK_IMPORTED_MODULE_5__","icon","text","formatMessage","to","badge","concat","map","list","Number","toString","flavours_glitch_features_ui_components_column__WEBPACK_IMPORTED_MODULE_4__","name","label","hideHeadingOnMobile","className","flavours_glitch_features_ui_components_column_subheading__WEBPACK_IMPORTED_MODULE_6__","undefined","preferencesLink","href","onClick","signOutLink","method","invitesEnabled","target","react_intl__WEBPACK_IMPORTED_MODULE_7__","values","github","rel","version","Mastodon","ImmutablePureComponent","PropTypes","object","isRequired","ImmutablePropTypes","bool","func"],"mappings":"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","file":"flavours/glitch/async/getting_started.js","sourcesContent":["import React from 'react';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ColumnLink from 'flavours/glitch/features/ui/components/column_link';\nimport ColumnSubheading from 'flavours/glitch/features/ui/components/column_subheading';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { me, invitesEnabled, version } from 'flavours/glitch/util/initial_state';\nimport { fetchFollowRequests } from 'flavours/glitch/actions/accounts';\nimport { List as ImmutableList } from 'immutable';\nimport { createSelector } from 'reselect';\nimport { fetchLists } from 'flavours/glitch/actions/lists';\nimport { preferencesLink, profileLink, signOutLink } from 'flavours/glitch/util/backend_links';\n\nconst messages = defineMessages({\n  heading: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public_timeline: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  navigation_subheading: { id: 'column_subheading.navigation', defaultMessage: 'Navigation' },\n  settings_subheading: { id: 'column_subheading.settings', defaultMessage: 'Settings' },\n  community_timeline: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  direct: { id: 'navigation_bar.direct', defaultMessage: 'Direct messages' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  settings: { id: 'navigation_bar.app_settings', defaultMessage: 'App settings' },\n  follow_requests: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow requests' },\n  sign_out: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  keyboard_shortcuts: { id: 'navigation_bar.keyboard_shortcuts', defaultMessage: 'Keyboard shortcuts' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  lists_subheading: { id: 'column_subheading.lists', defaultMessage: 'Lists' },\n  misc: { id: 'navigation_bar.misc', defaultMessage: 'Misc' },\n  menu: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n});\n\nconst makeMapStateToProps = () => {\n  const getOrderedLists = createSelector([state => state.get('lists')], lists => {\n    if (!lists) {\n      return lists;\n    }\n\n    return lists.toList().filter(item => !!item).sort((a, b) => a.get('title').localeCompare(b.get('title')));\n  });\n\n  const mapStateToProps = state => ({\n    lists: getOrderedLists(state),\n    myAccount: state.getIn(['accounts', me]),\n    columns: state.getIn(['settings', 'columns']),\n    unreadFollowRequests: state.getIn(['user_lists', 'follow_requests', 'items'], ImmutableList()).size,\n    unreadNotifications: state.getIn(['notifications', 'unread']),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFollowRequests: () => dispatch(fetchFollowRequests()),\n  fetchLists: () => dispatch(fetchLists()),\n  openSettings: () => dispatch(openModal('SETTINGS', {})),\n});\n\nconst badgeDisplay = (number, limit) => {\n  if (number === 0) {\n    return undefined;\n  } else if (limit && number >= limit) {\n    return `${limit}+`;\n  } else {\n    return number;\n  }\n};\n\n@connect(makeMapStateToProps, mapDispatchToProps)\n@injectIntl\nexport default class GettingStarted extends ImmutablePureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    myAccount: ImmutablePropTypes.map.isRequired,\n    columns: ImmutablePropTypes.list,\n    multiColumn: PropTypes.bool,\n    fetchFollowRequests: PropTypes.func.isRequired,\n    unreadFollowRequests: PropTypes.number,\n    unreadNotifications: PropTypes.number,\n    lists: ImmutablePropTypes.list,\n    fetchLists: PropTypes.func.isRequired,\n    openSettings: PropTypes.func.isRequired,\n  };\n\n  componentWillMount () {\n    this.props.fetchLists();\n  }\n\n  componentDidMount () {\n    const { myAccount, fetchFollowRequests } = this.props;\n\n    if (myAccount.get('locked')) {\n      fetchFollowRequests();\n    }\n  }\n\n  render () {\n    const { intl, myAccount, columns, multiColumn, unreadFollowRequests, unreadNotifications, lists, openSettings } = this.props;\n\n    const navItems = [];\n    let listItems = [];\n\n    if (multiColumn) {\n      if (!columns.find(item => item.get('id') === 'HOME')) {\n        navItems.push(<ColumnLink key='0' icon='home' text={intl.formatMessage(messages.home_timeline)} to='/timelines/home' />);\n      }\n\n      if (!columns.find(item => item.get('id') === 'NOTIFICATIONS')) {\n        navItems.push(<ColumnLink key='1' icon='bell' text={intl.formatMessage(messages.notifications)} badge={badgeDisplay(unreadNotifications)} to='/notifications' />);\n      }\n\n      if (!columns.find(item => item.get('id') === 'COMMUNITY')) {\n        navItems.push(<ColumnLink key='2' icon='users' text={intl.formatMessage(messages.community_timeline)} to='/timelines/public/local' />);\n      }\n\n      if (!columns.find(item => item.get('id') === 'PUBLIC')) {\n        navItems.push(<ColumnLink key='3' icon='globe' text={intl.formatMessage(messages.public_timeline)} to='/timelines/public' />);\n      }\n    }\n\n    if (!multiColumn || !columns.find(item => item.get('id') === 'DIRECT')) {\n      navItems.push(<ColumnLink key='4' icon='envelope' text={intl.formatMessage(messages.direct)} to='/timelines/direct' />);\n    }\n\n    if (!multiColumn || !columns.find(item => item.get('id') === 'BOOKMARKS')) {\n      navItems.push(<ColumnLink key='5' icon='bookmark' text={intl.formatMessage(messages.bookmarks)} to='/bookmarks' />);\n    }\n\n    if (myAccount.get('locked')) {\n      navItems.push(<ColumnLink key='6' icon='users' text={intl.formatMessage(messages.follow_requests)} badge={badgeDisplay(unreadFollowRequests, 40)} to='/follow_requests' />);\n    }\n\n    navItems.push(<ColumnLink key='7' icon='ellipsis-h' text={intl.formatMessage(messages.misc)} to='/getting-started-misc' />);\n\n    listItems = listItems.concat([\n      <div key='8'>\n        <ColumnLink key='9' icon='bars' text={intl.formatMessage(messages.lists)} to='/lists' />\n        {lists.map(list =>\n          <ColumnLink key={(9 + Number(list.get('id'))).toString()} to={`/timelines/list/${list.get('id')}`} icon='list-ul' text={list.get('title')} />\n        )}\n      </div>,\n    ]);\n\n    return (\n      <Column name='getting-started' icon='asterisk' heading={intl.formatMessage(messages.heading)} label={intl.formatMessage(messages.menu)} hideHeadingOnMobile>\n        <div className='scrollable optionally-scrollable'>\n          <div className='getting-started__wrapper'>\n            <ColumnSubheading text={intl.formatMessage(messages.navigation_subheading)} />\n            {navItems}\n            <ColumnSubheading text={intl.formatMessage(messages.lists_subheading)} />\n            {listItems}\n            <ColumnSubheading text={intl.formatMessage(messages.settings_subheading)} />\n            { preferencesLink !== undefined && <ColumnLink icon='cog' text={intl.formatMessage(messages.preferences)} href={preferencesLink} /> }\n            <ColumnLink icon='cogs' text={intl.formatMessage(messages.settings)} onClick={openSettings} />\n            <ColumnLink icon='sign-out' text={intl.formatMessage(messages.sign_out)} href={signOutLink} method='delete' />\n          </div>\n\n          <div className='getting-started__footer'>\n            <ul>\n              {invitesEnabled && <li><a href='/invites' target='_blank'><FormattedMessage id='getting_started.invite' defaultMessage='Invite people' /></a> · </li>}\n              <li><a href='/about/more' target='_blank'><FormattedMessage id='navigation_bar.info' defaultMessage='About this instance' /></a> · </li>\n              <li><a href='https://joinmastodon.org/apps' target='_blank'><FormattedMessage id='navigation_bar.apps' defaultMessage='Mobile apps' /></a> · </li>\n              <li><a href='/terms' target='_blank'><FormattedMessage id='getting_started.terms' defaultMessage='Terms of service' /></a> · </li>\n              <li><a href='https://docs.joinmastodon.org' target='_blank'><FormattedMessage id='getting_started.documentation' defaultMessage='Documentation' /></a></li>\n            </ul>\n\n            <p>\n              <FormattedMessage\n                id='getting_started.open_source_notice'\n                defaultMessage='Glitchsoc is open source software, a friendly fork of {Mastodon}. You can contribute or report issues on GitHub at {github}.'\n                values={{\n                  github: <span><a href='https://github.com/glitch-soc/mastodon' rel='noopener' target='_blank'>glitch-soc/mastodon</a> (v{version})</span>,\n                  Mastodon: <a href='https://github.com/tootsuite/mastodon' rel='noopener' target='_blank'>Mastodon</a> }}\n              />\n            </p>\n          </div>\n        </div>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
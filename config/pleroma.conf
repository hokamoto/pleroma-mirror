# Uploads directory.
pleroma.uploads.directory = "uploads"

# Upstream HTTP proxy.
# pleroma.http.proxy_url = 

# Enables chat.
pleroma.chat.enabled = true

# Enable gopher server.
pleroma.gopher.enabled = false

# Gopher: bind IP.
# pleroma.gopher.ip = "0.0.0.0"

# Gopher: bind port.
# pleroma.gopher.port = 9999

# Database adapter.
pleroma.db.adapter = Elixir.Ecto.Adapters.Postgres

# Database username.
pleroma.db.username = "postgres"

# Database password.
pleroma.db.password = "postgres"

# Database name.
pleroma.db.database = "pleroma_dev"

# Database hostname.
pleroma.db.hostname = "localhost"

# Database pool size.
pleroma.db.pool_size = 10

# Secret key.
pleroma.web.secret_key_base = "UNSECURE_CHANGE_ME"

# Instance host.
pleroma.url.host = "dev.pigs.social"

# Instance scheme.
# pleroma.url.scheme = "https"

# Instance port.
# pleroma.url.port = 443

# Web server: bind host.
pleroma.http.ip = "0.0.0.0"

# Web server: bind port.
pleroma.http.port = 4008

# Instance upload limit.
pleroma.instance.upload_limit = 16000000

# Instance federation.
pleroma.instance.federating = true

# Instance rewrite policies.
pleroma.instance.rewrite_policies = Elixir.Pleroma.Web.ActivityPub.MRF.NoOpPolicy

# Instance: set as public.
pleroma.instance.public = true

# Instance name.
pleroma.instance.name = "Pleroma"

# Instance contact email.
pleroma.instance.email = "contact@email"

# Instance character limit.
pleroma.instance.limit = 5000

# Instance: open registrations.
pleroma.instance.registrations_open = true

# Enabled media proxy.
pleroma.media_proxy.enabled = true

# Media proxy: redirect to original URI on failure.
# pleroma.media_proxy.redirect_on_failure = true


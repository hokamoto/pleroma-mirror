{"version":3,"sources":["webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/pinned_accounts_editor/containers/account_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/pinned_accounts_editor/containers/search_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/pinned_accounts_editor/index.js"],"names":["injectIntl","connect","getAccount","makeGetAccount","state","_ref","accountId","added","account","getIn","includes","dispatch","_ref2","onRemove","unpinAccount","onAdd","pinAccount","Account","value","onSubmit","fetchPinnedAccountsSuggestions","onClear","clearPinnedAccountsSuggestions","onChange","changePinnedAccountsSuggestions","Search","PinnedAccountsEditor","accountIds","searchAccountIds","onInitialize","fetchPinnedAccounts","onReset","resetPinnedAccountsEditor","componentDidMount","this","props","componentWillUnmount","render","_this$props","showSearch","size","Object","jsx","className","index_es","id","defaultMessage","search_container","map","account_container","role","tabIndex","onClick","optional_motion","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","ImmutablePureComponent","onClose","PropTypes","func","isRequired","intl","object","title","string","ImmutablePropTypes","list"],"mappings":"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","file":"flavours/glitch/async/pinned_accounts_editor.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from 'flavours/glitch/selectors';\nimport { injectIntl } from 'react-intl';\nimport { pinAccount, unpinAccount } from 'flavours/glitch/actions/accounts';\nimport Account from 'flavours/glitch/features/list_editor/components/account';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['pinnedAccountsEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(unpinAccount(accountId)),\n  onAdd: () => dispatch(pinAccount(accountId)),\n});\n\nexport default injectIntl(connect(makeMapStateToProps, mapDispatchToProps)(Account));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport {\n  fetchPinnedAccountsSuggestions,\n  clearPinnedAccountsSuggestions,\n  changePinnedAccountsSuggestions\n} from '../../../actions/accounts';\nimport Search from 'flavours/glitch/features/list_editor/components/search';\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['pinnedAccountsEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchPinnedAccountsSuggestions(value)),\n  onClear: () => dispatch(clearPinnedAccountsSuggestions()),\n  onChange: value => dispatch(changePinnedAccountsSuggestions(value)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(Search));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { fetchPinnedAccounts, clearPinnedAccountsSuggestions, resetPinnedAccountsEditor } from 'flavours/glitch/actions/accounts';\nimport AccountContainer from './containers/account_container';\nimport SearchContainer from './containers/search_container';\nimport Motion from 'flavours/glitch/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['pinnedAccountsEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['pinnedAccountsEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: () => dispatch(fetchPinnedAccounts()),\n  onClear: () => dispatch(clearPinnedAccountsSuggestions()),\n  onReset: () => dispatch(resetPinnedAccountsEditor()),\n});\n\n@connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nexport default class PinnedAccountsEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize } = this.props;\n    onInitialize();\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <h4><FormattedMessage id='endorsed_accounts_editor.endorsed_accounts' defaultMessage='Featured accounts' /></h4>\n\n        <SearchContainer />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <AccountContainer key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex='-1' className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) =>\n              (<div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <AccountContainer key={accountId} accountId={accountId} />)}\n              </div>)\n            }\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}